@startuml container_diagram
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml

LAYOUT_WITH_LEGEND()

Person(user, "User", "Uses the web application to submit requests and view detections.")

System_Boundary(system, "Ocean Eco Watch") {
    System(webApp, "Web App", "Browser-based")
    System(api, "API", "FastAPI")
    System(svc, "PlasticDetectionService", "Service")
    System(model, "PlasticDetectionModel", "CNN")
}

System_Ext(SentinelHub, "Sentinel Hub", "Provides satellite data.")
System_Ext(AwsRds, "AWS RDS", "PostGIS database for storing vector data.")
System_Ext(AwsS3, "AWS S3", "Stores satellite images and prediction raster data.")
System_Ext(AwsElasticBeanstalk, "AWS Elastic Beanstalk", "Hosts the API.")
System_Ext(AwsElasticLoadBalancing, "AWS Elastic Load Balancing", "Distributes incoming traffic.")
System_Ext(Strato, "Strato", "Hosts frontend web app.")
System_Ext(Runpod, "Runpod", "Serverless GPU for running prediction models.")
System_Ext(GithubActions, "Github Actions", "Runs prediction service")

Rel(user, webApp, "Uses")
Rel(webApp, api, "Submits requests to")
Rel(api, svc, "Triggers requests to")
Rel(api, SentinelHub, "Downloads satellite data from")
Rel(svc, AwsRds, "Reads from and writes to")
Rel(svc, model, "Uses")
Rel(svc, AwsS3, "Stores images in")
Rel_R(api, AwsRds, "Reads from and writes to")
Rel(svc, SentinelHub, "Downloads satellite data from")
Rel(model, Runpod, "Runs on")
Rel(webApp, Strato, "Hosted on")
Rel(api, AwsElasticBeanstalk, "Hosted on")
Rel(api, AwsElasticLoadBalancing, "Balances traffic to")
Rel(svc, GithubActions, "Runs on")
@enduml
